Build a fully functional MVP of Saathi Voice, a voice-first mentorship platform for rural youth in India, using only free and open-source tools, and make it fully deployable on Replit. The application should start by asking the user, either via CLI or a minimalist HTML interface, whether they are a üë®‚Äçüè´ Mentor or a üë®‚Äçüéì Student. Based on this choice, guide them through separate onboarding flows. In the student flow, use Hugging Face‚Äôs open-source Whisper model to convert voice input into text for name, goal, and language preferences, and store this data in a lightweight SQLite database. Match the student to an appropriate mentor using sentence similarity with sentence-transformers/all-MiniLM-L6-v2, also from Hugging Face. In the mentor flow, allow voice or form-based registration, capturing name, topics, language, and availability, and optionally store a short voice intro clip. Simulate voice-based interactions between mentors and students using locally stored .mp3 audio files or a mock voice call interface. Build the frontend using vanilla HTML, CSS, and JavaScript with a strict black-and-white theme for high accessibility and offline support using service workers, and serve it through Flask routes. Ensure your project structure includes folders like /backend (for app.py, models.py, matching.py), /frontend (for all UI files), and /static/audio/ for storing audio clips and motivational rewards. Include a requirements.txt with only free libraries such as Flask, Torch, Transformers, Sentence-Transformers, Whisper, Pydub, etc., and make sure everything works seamlessly inside Replit, using its built-in web hosting and console. The MVP should demonstrate real student/mentor flows, registration, AI-based matching, voice simulations, data persistence, and offline support. Once completed, push the project to GitHub with a detailed README.md, a feature checklist, and submit a demo video showing the app flow from registration to voice-based matching, emphasizing technical implementation, core functionality, accessibility, AI voice interaction, and offline readiness, aligning with judging criteria.